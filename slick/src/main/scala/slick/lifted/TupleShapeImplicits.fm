package slick.lifted

trait TupleShapeImplicits {
  @inline
  implicit final def tuple1Shape[M1, U1, P1](implicit u1: Shape[M1, U1, P1]): Shape[Tuple1[M1], Tuple1[U1], Tuple1[P1]] =
    new TupleShape[Tuple1[M1], Tuple1[U1], Tuple1[P1]](u1)
<#list 2..22 as i>
  @inline
  implicit final def tuple${i}Shape[<#list 1..i as j>M${j}<#if i != j>,</#if></#list>, <#list 1..i as j>U${j}<#if i != j>,</#if></#list>, <#list 1..i as j>P${j}<#if i != j>,</#if></#list>](implicit <#list 1..i as j>u${j}: Shape[M${j}, U${j}, P${j}]<#if i != j>, </#if></#list>): Shape[(<#list 1..i as j>M${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>U${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>P${j}<#if i != j>,</#if></#list>)] =
    new TupleShape[(<#list 1..i as j>M${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>U${j}<#if i != j>,</#if></#list>), (<#list 1..i as j>P${j}<#if i != j>,</#if></#list>)](<#list 1..i as j>u${j}<#if i != j>,</#if></#list>)
</#list>
}
